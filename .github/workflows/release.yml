name: Release and Publish

on:
  push:
    tags:
      - 'v*.*.*'
  workflow_dispatch:

jobs:
  wait-for-ci:
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/v')
    outputs:
      ci-result: ${{ steps.wait-for-ci.outputs.conclusion }}
    steps:
      - name: Wait for CI workflow
        id: wait-for-ci
        uses: fountainhead/action-wait-for-check@v1.1.0
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          checkName: CI
          ref: ${{ github.event.pull_request.head.sha || github.sha }}
          timeoutSeconds: 900

  release:
    needs: wait-for-ci
    if: needs.wait-for-ci.outputs.ci-result == 'success'
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.9'

    - name: Install Poetry
      run: |
        curl -sSL https://install.python-poetry.org | python3 -
        export PATH="$HOME/.local/bin:$PATH"
        poetry --version

    - name: Install dependencies
      run: poetry install

    - name: Build package
      run: poetry build

    - name: Create GitHub Release
      uses: softprops/action-gh-release@v2.1.0
      with:
        generate_release_notes: true
        files: |
          dist/*
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Publish to PyPI
      env:
        POETRY_PYPI_TOKEN_PYPI: ${{ secrets.PYPI_API_TOKEN }}
      run: yes | poetry publish --build 